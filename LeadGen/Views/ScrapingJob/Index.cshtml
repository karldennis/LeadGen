@model LeadGen.Models.SearchViewModel
@{
    ViewBag.Title = "Home Page";
}



@Html.ValidationSummary()

<h3>Preview Results:</h3>
<p>Search for potential customers or leads.  We first give you a preview of the results, if the results are the kind of data
you are looking for click "create job" which then triggers our robots to go out and find the information you are looking for.</p>

@using (Html.BeginForm("Index", "ScrapingJob", FormMethod.Post, new { @class = "form-inline" }))
{
    <form action="/" class="form-inline" method="post">
        <input type="text" name="terms" placeholder="search term/industry (ex: florists)" value="@Model.Terms"/>
        <input type="text" name="location" placeholder="location (zip or city,state)" value="@Model.Location"/>
        <input type="text" name="radius" placeholder="mile radius, max 25 miles" value="@( Model.Radius == 0 ? "" : Model.Radius.ToString())"/>
        <input type="submit" value="Preview" class="btn"/>
    </form>
}




@if( Model.Leads == null || !Model.Leads.Any())
{
    <div class="alert alert-block">
        No leads were found.  Can't create a scraping job for you.  
    </div>
}

@if (Model.Leads != null && Model.Leads.Any())
{
    <div class="alert alert-info">
        <div class="row-fluid show-grid">
              <div class="span6">
        @Model.ListingsFound potential leads found, click Create Job to start the scraping process.  
        <br />
        * Websites, Emails are found during the scraping process.  
        </div>
        <div class="span6">
        
        @using (Html.BeginForm("CreateJob", "ScrapingJob", FormMethod.Post, new {@class="form-inline"}))
        {
    
            <input type="hidden" name="terms" placeholder="search term" value="@Model.Terms"/>
            <input type="hidden" name="location" placeholder="location" value="@Model.Location"/>
            <input type="hidden" name="listingsfound" placeholder="location" value="@Model.ListingsFound"/>
            <input type="hidden" name="radius" placeholder="radius" value="@( Model.Radius == 0 ? 10 : Model.Radius)"/>
    
            <input type="text" name="name" placeholder="optional name" /><br />
            <input  type="submit" 
                    value="@(Model.Leads != null && Model.Leads.Any() ? "Create Job" : "Unable to create a job without any results!")" 
                    class="btn btn-primary btn-large @(Model.Leads != null && Model.Leads.Any() ? "" : "disabled")"/>
        }
            </div>
            </div>
    </div>
    
    <table style="width: 100%">
        <thead><tr>
                    <th>Industry</th><th>Name</th><th>Phone</th><th>YP Page</th><th>Address</th>
                </tr></thead>
        <tbody>

            @foreach (var listing in Model.Leads)
            {
            <tr>
                <td data-bind="text: PrimaryCategory">@listing.PrimaryCategory</td>
                <td data-bind="text: BusinessName">@listing.BusinessName</td>
                <td data-bind="text: Phone">@listing.Phone</td>
                <td><a href="@listing.MoreInfoUrl"target="_blank">More Info</a></td>
                <td>
                    @listing.Street<br />
                    @listing.City, @listing.State @listing.Zip
                </td>
            </tr>
            }
        
        </tbody>
    </table>
}